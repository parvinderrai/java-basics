package com.learning.java.basics.model;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

public class CarOrder {

    public static final SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss S Z");
    //Order Id will be assigned value by the Order Service
    private int orderId;

    //Date will be the date order is placed.
    private Date orderDate;

    private AbstractCar car;

    public CarOrder() {
    }

    public CarOrder(AbstractCar car) {
        this.car = car;
        this.orderDate = new Date();
    }

    public int getOrderId() {
        return orderId;
    }

    public void setOrderId(int orderId) {
        this.orderId = orderId;
    }

    public Date getOrderDate() {
        return orderDate;
    }

    public void setOrderDate(Date orderDate) {
        this.orderDate = orderDate;
    }

    public AbstractCar getCar() {
        return car;
    }

    public void setCar(AbstractCar car) {
        this.car = car;
    }

    @Override
    public String toString() {
        return "CarOrder{" +
                "orderId=" + orderId +
                ", orderDate=" + orderDate +
                ", car=" + car +
                '}';
    }

    public String toCsv() {
        return orderId + ","
            + getStringFromDate(orderDate) + ","
            + car.getFactoryName() + ","
            + car.name + ","
            + car.color;

    }

    /**
     * This method will accept a CSV format car order, similar to generated by toCsv() method.
     * Then it will convert it to CarOrder object.
     *
     * @return CarOrder
     */
    public static CarOrder fromCsv(String csvCarOrder) throws ParseException {
        if(csvCarOrder==null || csvCarOrder.length()==0) {
            throw new IllegalArgumentException("Invalid CSV input given.");
        }

        //Split CSV into individual Strings and store in array
        String[] orderArray = csvCarOrder.split(",");

        //extract fields and create CarOrder object from it.

        CarOrder order = new CarOrder();
        order.setOrderId(Integer.parseInt(orderArray[0])); // at index 0 in array
        order.setOrderDate(getDateFromString(orderArray[1])); // at index 1 in array

        AbstractCar car = null;
        //now you need to first check what type of car it is Honda or Tata?
        if(orderArray[3]!=null && orderArray[3].length() > 0) {
            if(orderArray[3].equalsIgnoreCase("Honda Accord")){
                //this is Honda car
                car = new HondaCar();
                car.setName(orderArray[3]); //at index 3 in array
                car.setColor(orderArray[4]); //at index 4 in array
            }else if (orderArray[3].equalsIgnoreCase("Tata Jaguar")) {
                //this is tata car
                car = new TataCar();
                car.setName(orderArray[3]); //at index 3 in array
                car.setColor(orderArray[4]); //at index 4 in array
            }
        }

        order.setCar(car);

        return order;
    }

    /**
     * This method converts string date to date object.
     * @param source
     * @return
     * @throws ParseException
     */
    private static Date getDateFromString(String source) throws ParseException {
        return DATE_FORMAT.parse(source);
    }

    /**
     * This method will convert date to string in given format.
     * @param date
     * @return
     */
    private String getStringFromDate(Date date) {
        return DATE_FORMAT.format(date);
    }
}
